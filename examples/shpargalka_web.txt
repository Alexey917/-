Порядок действий при разработке:
  1. Берем шаблон стартовой верстки из github(в нем есть normalize)
  2. Тренируем Emmet перед версткой 5 мин.
  3. Создать robot.txt если это учебный проект
  4. Верстка
  5. Валидация html
  6. Создание эффектов (hover, приколюхи)
  7. Префиксы
  8. Адаптив
  9. Переполняемость (в консоли document.designMode='on')
  10. Кроссбраузерность
  11. Заливаем на хостинг (FTP-client)
  12. Прогоняем через pagespeed
  13. Сжимаем картинки через tinypng, конвертируем в webp, font-display: swap - подгружает текст без шрифта в начале(для ускорения загрузки страницы), добавляем тег picture,  modernizr - скрипт чтобы использовать webp в css (.no-webp .header-image/ .header-image), импортируем normilize, шрифты в style.css(по возможности), сжимаем css (по возможности), делаем фиксированные ширину и высоту у картинок
  14. Проверка в эмуляторе
  15. Добавляем .htaccess файл для https и установки времени хранения картинок в кеш
  16. Финальная выгрузка файлов



Заметки:
  - постоянные комиты, разбиение цели на мелкие (оч.мелкие) задачи
  - ReadMe.md ### Заголовок(можно написать свое имя, тип автор)
  - клонируя репо, можно удалить папку git  и таким образом начать другой проект
  - UAkit оттуда можно брать готовые дизайн элементы
  - сопроводительное письмо подробно описывает ключевые навыки указанные в резюме. Этот текст также можно поместить в раздел "о себе", в соц.сетях или на своем сайте.
  - правила написания html и css кода (чекай курс)
  - в стилях применяем:
  * {
    box-sizing: border-box;
  } 

  - max-width и margin: auto - помогут центрировать объект
  - google fonts - для шрифтов(но они с лицензией)
  - строчные элементы не имеют высоты и ширины, внешние отступы тоже не работают, кроме margin-left и margin-right
  - vh и vw ширина, высота в процентах от всего экрана
  - inline flex расположит два флексовых элемента в строку
  - flex-basis аналог width/height
  - flex-grow заполнить свободный пространство под указанный элемент
  - flex-shrink сжатие элемента
  - обновить файл со стилями можно href=css/stye.css?v=1.1
  - у заказчика есть хостинг:
      берем данные его билинга(лич.каб)
      данные (пароль, логин) бд
      данные FTP + адрес
    у заказчика нет хостинга:
      делаем ему реферальную ссылку, чтобы он сам зарегался
      оформляем ему сами, берем его паспортные данные
  - плагин font fascia в figma покажет все шрифты в вашем макете
  - webfonts сайт, скачать нужный шрифт, если его нет в достать google font
  - в формате woff2 (url: woff и woff2 и адрес не забыть указать)
  - svg sprites, в html: 
    <svg class="класс">
      <use href="путь#id"></use>
    </svg>
